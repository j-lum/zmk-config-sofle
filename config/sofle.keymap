#define ZMK_MOUSE_DEFAULT_SCRL_VAL 35 // 10

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    behaviors {
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESCAPE        &kp N1  &kp N2              &kp N3        &kp N4        &kp N5             &kp UP_ARROW                     &kp N6        &kp N7         &kp N8           &kp N9       &kp N0         &kp GRAVE
&kp TAB           &kp Q   &kp W               &kp E         &kp R         &kp T              &kp DOWN_ARROW                   &kp Y         &kp U          &kp I            &kp O        &kp P          &kp MINUS
&kp LEFT_SHIFT    &kp A   &kp S               &kp D         &kp F         &kp G              &kp LEFT_ARROW                   &kp H         &kp J          &kp K            &kp L        &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X               &kp C         &kp V         &kp B              &kp RIGHT_ARROW                  &kp N         &kp M          &kp COMMA        &kp DOT      &kp FSLH       &kp NON_US_BACKSLASH
&kp C_MUTE                &kp K_CONTEXT_MENU  &kp LEFT_ALT  &kp LEFT_WIN  &mo 1   &kp SPACE  &kp LEFT_WIN       &kp ENTER     &mo 2         &kp BACKSPACE  &kp DELETE       &kp LC(TAB)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
            display-name = "Base";
        };

        Lower {
            bindings = <
&trans  &kp N1          &kp N2           &kp N3     &kp N4     &kp N5           &trans          &kp N6  &kp N7    &kp N8     &kp N9         &kp N0   &trans
&kp F1  &kp F2          &kp F3           &kp F4     &kp F5     &kp F6           &trans          &kp F7  &kp F8    &kp F9     &kp F10        &kp F11  &kp F12
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LBKT   &kp RBKT   &trans           &trans          &trans  &kp HOME  &kp PG_UP  &kp PAGE_DOWN  &kp END  &trans
&trans  &trans          &mkp RCLK        &mkp MCLK  &mkp LCLK  &trans           &trans          &trans  &trans    &trans     &trans         &trans   &trans
&trans                  &trans           &trans     &trans     &trans  &trans   &trans  &trans  &trans  &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
            display-name = "Lower";
        };

        Raise {
            bindings = <
&kp F1    &kp F2           &kp F3           &kp F4           &kp F5     &kp F6                  &mmv MOVE_UP                    &kp F7    &kp F8        &kp F9        &kp F10           &kp F11        &kp F12
&kp HOME  &kp KP_NUMBER_7  &kp KP_N8        &kp KP_NUMBER_9  &kp SLASH  &kp ASTERISK            &mmv MOVE_DOWN                  &kp HOME  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT)  &kp PG_UP
&kp END   &kp KP_N4        &kp KP_N5        &kp KP_N6        &kp MINUS  &kp PLUS                &mmv MOVE_LEFT                  &kp END   &kp LEFT      &kp DOWN      &kp UP_ARROW      &kp RIGHT      &kp PAGE_DOWN
&trans    &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp SQT    &kp EQUAL               &mmv MOVE_RIGHT                 &kp PLUS  &kp MINUS     &kp EQUAL     &kp ASTERISK      &kp SLASH      &kp CAPSLOCK
&trans                     &kp KP_NUMBER_0  &trans           &trans     &trans        &trans    &mkp LCLK           &trans      &trans    &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Raise";
        };

        Tri {
            bindings = <
&tog 4  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4              &trans                       &trans           &trans           &trans           &trans           &trans           &bt BT_CLR
&trans  &trans        &trans            &trans          &trans        &trans                    &trans                       &trans           &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &trans
&trans  &kp C_MUTE    &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &trans                    &trans                       &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans
&trans  &trans        &trans            &trans          &trans        &trans                    &trans                       &trans           &rgb_ug RGB_SPD  &trans           &trans           &rgb_ug RGB_SPI  &trans
&trans                &trans            &trans          &trans        &trans        &trans      &trans      &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&rgb_encoder>;
            display-name = "Tri";
        };

        Game {
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3       &kp N4        &kp N5                     &trans            &kp N6  &kp N7        &kp N8         &kp N9     &kp N0    &tog 4
&kp TAB    &kp Q   &kp W      &kp E        &kp R         &kp T                      &trans            &kp Y   &kp U         &kp UP_ARROW   &kp O      &kp P     &kp MINUS
&kp LSHFT  &kp A   &kp S      &kp D        &kp F         &kp G                      &trans            &kp H   &kp LEFT      &kp DOWN       &kp RIGHT  &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X      &kp C        &kp V         &kp B                      &trans            &kp N   &kp M         &kp COMMA      &kp DOT    &kp FSLH  &kp RSHFT
&trans             &kp SPACE  &kp PAGE_UP  &kp NUMBER_4  &kp O   &kp LEFT_BRACKET   &trans  &kp RBKT  &kp P   &kp NUMBER_6  &kp PAGE_DOWN  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
            display-name = "Game";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
